{"ast":null,"code":"var _jsxFileName = \"/Users/mehan/tk/cloudbased--task-manager-Webapp/frontend/src/components/TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskForm({\n  fetchTasks,\n  editingTask,\n  setEditingTask\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  useEffect(() => {\n    if (editingTask) {\n      setTitle(editingTask.title);\n      setDescription(editingTask.description);\n    }\n  }, [editingTask]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (editingTask) {\n      await api.put(`/tasks/${editingTask.id}`, {\n        title,\n        description\n      });\n      setEditingTask(null);\n    } else {\n      await api.post(\"/tasks\", {\n        title,\n        description\n      });\n    }\n    setTitle(\"\");\n    setDescription(\"\");\n    fetchTasks();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: [editingTask ? \"Update\" : \"Add\", \" Task\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"EA2MnaeBy++r0GzgDN7+Z9SdR0w=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","TaskForm","fetchTasks","editingTask","setEditingTask","_s","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","put","id","post","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mehan/tk/cloudbased--task-manager-Webapp/frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport api from \"../services/api\";\n\nfunction TaskForm({ fetchTasks, editingTask, setEditingTask }) {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  useEffect(() => {\n    if (editingTask) {\n      setTitle(editingTask.title);\n      setDescription(editingTask.description);\n    }\n  }, [editingTask]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (editingTask) {\n      await api.put(`/tasks/${editingTask.id}`, { title, description });\n      setEditingTask(null);\n    } else {\n      await api.post(\"/tasks\", { title, description });\n    }\n    setTitle(\"\");\n    setDescription(\"\");\n    fetchTasks();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Title\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        required\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Description\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n        required\n      />\n      <button type=\"submit\">{editingTask ? \"Update\" : \"Add\"} Task</button>\n    </form>\n  );\n}\n\nexport default TaskForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,QAAQA,CAAC;EAAEC,UAAU;EAAEC,WAAW;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAC7D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,IAAIM,WAAW,EAAE;MACfI,QAAQ,CAACJ,WAAW,CAACG,KAAK,CAAC;MAC3BG,cAAc,CAACN,WAAW,CAACK,WAAW,CAAC;IACzC;EACF,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;EAEjB,MAAMO,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIT,WAAW,EAAE;MACf,MAAML,GAAG,CAACe,GAAG,CAAC,UAAUV,WAAW,CAACW,EAAE,EAAE,EAAE;QAAER,KAAK;QAAEE;MAAY,CAAC,CAAC;MACjEJ,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,MAAM;MACL,MAAMN,GAAG,CAACiB,IAAI,CAAC,QAAQ,EAAE;QAAET,KAAK;QAAEE;MAAY,CAAC,CAAC;IAClD;IACAD,QAAQ,CAAC,EAAE,CAAC;IACZE,cAAc,CAAC,EAAE,CAAC;IAClBP,UAAU,CAAC,CAAC;EACd,CAAC;EAED,oBACEF,OAAA;IAAMgB,QAAQ,EAAEN,YAAa;IAAAO,QAAA,gBAC3BjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEd,KAAM;MACbe,QAAQ,EAAGV,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;MAC1CG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF3B,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,aAAa;MACzBC,KAAK,EAAEZ,WAAY;MACnBa,QAAQ,EAAGV,CAAC,IAAKF,cAAc,CAACE,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;MAChDG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF3B,OAAA;MAAQkB,IAAI,EAAC,QAAQ;MAAAD,QAAA,GAAEd,WAAW,GAAG,QAAQ,GAAG,KAAK,EAAC,OAAK;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEX;AAACtB,EAAA,CA3CQJ,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA6CjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}